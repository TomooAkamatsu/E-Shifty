{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, mergeWith, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\nvar variants = {\n  exit: props => _extends({\n    opacity: 0\n  }, props.reverse ? {\n    scale: props.initialScale\n  } : {\n    transitionEnd: {\n      scale: props.initialScale\n    }\n  }, {\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut\n    }\n  }),\n  enter: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.25,\n      ease: EASINGS.easeInOut\n    }\n  }\n};\nexport var scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nexport var ScaleFade = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    unmountOnExit,\n    in: isOpen,\n    reverse = true,\n    initialScale = 0.95,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"initialScale\", \"className\"]);\n\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var custom = {\n    initialScale,\n    reverse\n  };\n  var motionProps = mergeWith(scaleFadeConfig, {\n    custom,\n    animate: isOpen || unmountOnExit ? \"enter\" : \"exit\"\n  });\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className)\n  }, motionProps, rest)));\n});\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\";\n}","map":{"version":3,"sources":["../../src/scale-fade.tsx"],"names":["variants","exit","props","opacity","scale","initialScale","transitionEnd","transition","duration","ease","EASINGS","easeOut","enter","easeInOut","scaleFadeConfig","initial","animate","ScaleFade","in","reverse","className","rest","show","unmountOnExit","isOpen","custom","motionProps","mergeWith","cx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,EAAA,EAAA,SAAA,EAAA,OAAA,QAAA,kBAAA;AACA,SAAA,eAAA,EAAA,MAAA,QAAA,eAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,OAAA,QAAA,WAAA;AAIA,IAAMA,QAA2B,GAAG;EAClCC,IAAI,EAAGC,KAAD,IAAA,QAAA,CAAA;IACJC,OAAO,EAAE;EADL,CAAA,EAEA,KAAK,CAAL,OAAA,GACA;IAAEC,KAAK,EAAEF,KAAK,CAACG;EAAf,CADA,GAEA;IAAEC,aAAa,EAAE;MAAEF,KAAK,EAAEF,KAAK,CAACG;IAAf;EAAjB,CAJA,EAAA;IAKJE,UAAU,EAAE;MACVC,QAAQ,EADE,GAAA;MAEVC,IAAI,EAAEC,OAAO,CAACC;IAFJ;EALR,CAAA,CAD4B;EAWlCC,KAAK,EAAE;IACLT,OAAO,EADF,CAAA;IAELC,KAAK,EAFA,CAAA;IAGLG,UAAU,EAAE;MACVC,QAAQ,EADE,IAAA;MAEVC,IAAI,EAAEC,OAAO,CAACG;IAFJ;EAHP;AAX2B,CAApC;AAqBA,OAAO,IAAMC,eAAuC,GAAG;EACrDC,OAAO,EAD8C,MAAA;EAErDC,OAAO,EAF8C,OAAA;EAGrDf,IAAI,EAHiD,MAAA;EAIrDD;AAJqD,CAAhD;AA2BP,OAAO,IAAMiB,SAAS,GAAA,aAAG,KAAK,CAAL,UAAA,CACvB,CAAA,KAAA,EAAA,GAAA,KAAgB;EACd,IAAM;IAAA,aAAA;IAEJC,EAAE,EAFE,MAAA;IAGJC,OAAO,GAHH,IAAA;IAIJd,YAAY,GAJR,IAAA;IAKJe;EALI,IAAN,KAAA;EAAA,IAMKC,IANL,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,eAAA,EAAA,IAAA,EAAA,SAAA,EAAA,cAAA,EAAA,WAAA,CAAA,CAAA;;EASA,IAAMC,IAAI,GAAGC,aAAa,GAAGC,MAAM,IAAT,aAAA,GAA1B,IAAA;EACA,IAAMC,MAAM,GAAG;IAAA,YAAA;IAAgBN;EAAhB,CAAf;EAEA,IAAMO,WAAW,GAAGC,SAAS,CAAA,eAAA,EAAkB;IAAA,MAAA;IAE7CX,OAAO,EAAEQ,MAAM,IAANA,aAAAA,GAAAA,OAAAA,GAAoC;EAFA,CAAlB,CAA7B;EAKA,OAAA,aACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;IAAiB,MAAM,EAAEC;EAAzB,CAAA,EACGH,IAAI,IAAA,aACH,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,GAAA,EAAA,QAAA,CAAA;IACE,GAAG,EADL,GAAA;IAEE,SAAS,EAAEM,EAAE,CAAA,qBAAA,EAAA,SAAA;EAFf,CAAA,EAAA,WAAA,EAHN,IAGM,CAAA,CAFJ,CADF;AAnBG,CAAkB,CAAlB;;AAkCP,IAAA,OAAA,EAAa;EACXX,SAAS,CAATA,WAAAA,GAAAA,WAAAA;AACD","sourcesContent":["import { cx, mergeWith, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype ScaleFadeVariants = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: ScaleFadeVariants = {\n  exit: (props) => ({\n    opacity: 0,\n    ...(props.reverse\n      ? { scale: props.initialScale }\n      : { transitionEnd: { scale: props.initialScale } }),\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut,\n    },\n  }),\n  enter: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.25,\n      ease: EASINGS.easeInOut,\n    },\n  },\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\nexport interface ScaleFadeProps extends HTMLMotionProps<\"div\"> {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   */\n  reverse?: boolean\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport const ScaleFade = React.forwardRef<HTMLDivElement, ScaleFadeProps>(\n  (props, ref) => {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const custom = { initialScale, reverse }\n\n    const motionProps = mergeWith(scaleFadeConfig, {\n      custom,\n      animate: isOpen || unmountOnExit ? \"enter\" : \"exit\",\n    })\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...motionProps}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  ScaleFade.displayName = \"ScaleFade\"\n}\n"]},"metadata":{},"sourceType":"module"}