{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\";\nimport { motion } from \"framer-motion\";\nimport * as React from \"react\";\nvar transitions = {\n  slideInBottom: _extends({}, slideFadeConfig, {\n    custom: {\n      offsetY: 16,\n      reverse: true\n    }\n  }),\n  slideInRight: _extends({}, slideFadeConfig, {\n    custom: {\n      offsetX: 16,\n      reverse: true\n    }\n  }),\n  scale: _extends({}, scaleFadeConfig, {\n    custom: {\n      initialScale: 0.95,\n      reverse: true\n    }\n  }),\n  none: {}\n};\nvar Motion = chakra(motion.section);\nexport var ModalTransition = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    preset\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"preset\"]);\n\n  var motionProps = transitions[preset];\n  return /*#__PURE__*/React.createElement(Motion, _extends({\n    ref: ref\n  }, motionProps, rest));\n});","map":{"version":3,"sources":["../../src/modal-transition.tsx"],"names":["transitions","slideInBottom","custom","offsetY","reverse","slideInRight","offsetX","scale","initialScale","none","Motion","chakra","motion","ModalTransition","preset","rest","motionProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,eAAA,QAAA,uBAAA;AACA,SAAA,MAAA,QAAA,eAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAQA,IAAMA,WAAW,GAAG;EAClBC,aAAa,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA;IAEXC,MAAM,EAAE;MAAEC,OAAO,EAAT,EAAA;MAAeC,OAAO,EAAE;IAAxB;EAFG,CAAA,CADK;EAKlBC,YAAY,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA;IAEVH,MAAM,EAAE;MAAEI,OAAO,EAAT,EAAA;MAAeF,OAAO,EAAE;IAAxB;EAFE,CAAA,CALM;EASlBG,KAAK,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA;IAEHL,MAAM,EAAE;MAAEM,YAAY,EAAd,IAAA;MAAsBJ,OAAO,EAAE;IAA/B;EAFL,CAAA,CATa;EAalBK,IAAI,EAAE;AAbY,CAApB;AAgBA,IAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAA5B,OAAqB,CAArB;AAEA,OAAO,IAAMC,eAAe,GAAA,aAAG,KAAK,CAAL,UAAA,CAC7B,CAAA,KAAA,EAAA,GAAA,KAAsD;EACpD,IAAM;IAAEC;EAAF,IAAN,KAAA;EAAA,IAAmBC,IAAnB,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,QAAA,CAAA,CAAA;;EACA,IAAMC,WAAW,GAAGhB,WAAW,CAA/B,MAA+B,CAA/B;EACA,OAAA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;IAAQ,GAAG,EAAEiB;EAAb,CAAA,EAAA,WAAA,EAAP,IAAO,CAAA,CAAP;AAJG,CAAwB,CAAxB","sourcesContent":["import { chakra, ChakraProps } from \"@chakra-ui/system\"\nimport { scaleFadeConfig, slideFadeConfig } from \"@chakra-ui/transition\"\nimport { HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\n\nexport interface ModalTransitionProps\n  extends Omit<HTMLMotionProps<\"section\">, \"color\" | \"transition\">,\n    ChakraProps {\n  preset: \"slideInBottom\" | \"slideInRight\" | \"scale\" | \"none\"\n}\n\nconst transitions = {\n  slideInBottom: {\n    ...slideFadeConfig,\n    custom: { offsetY: 16, reverse: true },\n  },\n  slideInRight: {\n    ...slideFadeConfig,\n    custom: { offsetX: 16, reverse: true },\n  },\n  scale: {\n    ...scaleFadeConfig,\n    custom: { initialScale: 0.95, reverse: true },\n  },\n  none: {},\n}\n\nconst Motion = chakra(motion.section)\n\nexport const ModalTransition = React.forwardRef(\n  (props: ModalTransitionProps, ref: React.Ref<any>) => {\n    const { preset, ...rest } = props\n    const motionProps = transitions[preset]\n    return <Motion ref={ref} {...(motionProps as ChakraProps)} {...rest} />\n  },\n)\n"]},"metadata":{},"sourceType":"module"}