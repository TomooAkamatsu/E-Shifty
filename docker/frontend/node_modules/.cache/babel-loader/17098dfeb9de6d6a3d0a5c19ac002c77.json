{"ast":null,"code":"import { useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { fromEntries } from \"@chakra-ui/utils\";\nimport { createPopper as defaultCreatePopper } from \"@popperjs/core\";\nimport { dequal } from \"dequal\";\nimport * as React from \"react\";\n\nfunction resolve(obj, elements) {\n  return prev => {\n    var next = fromEntries(elements.map(element => [element, obj[element]]));\n    var isPopperEqual = dequal(prev.popper, next.popper);\n    var isArrowEqual = dequal(prev.arrow, next.arrow);\n    if (isArrowEqual && isPopperEqual) return prev;\n    return next;\n  };\n}\n\nvar EMPTY_MODIFIERS = [];\nexport function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var {\n    enabled = true\n  } = options;\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || \"bottom\",\n    strategy: options.strategy || \"absolute\",\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n  var [styles, setStyles] = React.useState({\n    popper: {\n      position: optionsWithDefaults.strategy,\n      left: \"0\",\n      top: \"0\"\n    }\n  });\n  var [attrs, setAttrs] = React.useState({});\n  var updateStateModifier = React.useMemo(() => ({\n    name: \"updateState\",\n    enabled,\n    phase: \"write\",\n    fn: _ref => {\n      var {\n        state\n      } = _ref;\n      var elements = Object.keys(state.elements);\n      setStyles(resolve(state.styles, elements));\n      setAttrs(resolve(state.attributes, elements));\n    },\n    requires: [\"computeStyles\"]\n  }), [enabled]);\n  var popperOptions = React.useMemo(() => {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [...optionsWithDefaults.modifiers, updateStateModifier, {\n        name: \"applyStyles\",\n        enabled: false\n      }]\n    };\n\n    if (dequal(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    }\n\n    prevOptions.current = newOptions;\n    return newOptions;\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useSafeLayoutEffect(() => {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useSafeLayoutEffect(() => {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return () => {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  React.useEffect(() => {\n    var id = requestAnimationFrame(() => {\n      var _popperInstanceRef$cu;\n\n      (_popperInstanceRef$cu = popperInstanceRef.current) == null ? void 0 : _popperInstanceRef$cu.forceUpdate();\n    });\n    return () => {\n      cancelAnimationFrame(id);\n    };\n  }, []);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles,\n    attributes: attrs,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n}","map":{"version":3,"sources":["../../src/react-popper.ts"],"names":["createPopper","prev","next","fromEntries","elements","element","obj","isPopperEqual","dequal","isArrowEqual","EMPTY_MODIFIERS","options","enabled","prevOptions","React","optionsWithDefaults","onFirstUpdate","placement","strategy","modifiers","popper","position","left","top","updateStateModifier","name","phase","fn","state","Object","setStyles","resolve","setAttrs","requires","popperOptions","newOptions","popperInstanceRef","useSafeLayoutEffect","referenceElement","popperElement","popperInstance","id","requestAnimationFrame","cancelAnimationFrame","attributes","update","forceUpdate"],"mappings":"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","sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport { fromEntries } from \"@chakra-ui/utils\"\nimport {\n  createPopper as defaultCreatePopper,\n  Instance,\n  Modifier,\n  Options as PopperOptions,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { dequal } from \"dequal\"\nimport * as React from \"react\"\n\ntype Options = Partial<PopperOptions> & {\n  enabled?: boolean\n  createPopper?: typeof defaultCreatePopper\n}\n\ntype State = {\n  styles: {\n    [key: string]: Partial<React.CSSProperties>\n  }\n  attributes: {\n    [key: string]: { [key: string]: string }\n  }\n}\n\nfunction resolve(obj: any, elements: string[]) {\n  return (prev: any) => {\n    const next = fromEntries(\n      elements.map((element) => [element, obj[element]]),\n    ) as any\n\n    const isPopperEqual = dequal(prev.popper, next.popper)\n    const isArrowEqual = dequal(prev.arrow, next.arrow)\n\n    if (isArrowEqual && isPopperEqual) return prev\n    return next\n  }\n}\n\nconst EMPTY_MODIFIERS: any[] = []\n\nexport function usePopper(\n  referenceElement: Element | VirtualElement,\n  popperElement: HTMLElement,\n  options: Options = {},\n) {\n  const { enabled = true } = options\n\n  const prevOptions = React.useRef<any>(null)\n\n  const optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || \"bottom\",\n    strategy: options.strategy || \"absolute\",\n    modifiers: options.modifiers || EMPTY_MODIFIERS,\n  }\n\n  const [styles, setStyles] = React.useState<State[\"styles\"]>({\n    popper: {\n      position: optionsWithDefaults.strategy,\n      left: \"0\",\n      top: \"0\",\n    },\n  })\n\n  const [attrs, setAttrs] = React.useState<State[\"attributes\"]>({})\n\n  const updateStateModifier: Modifier<\"updateState\", any> = React.useMemo(\n    () => ({\n      name: \"updateState\",\n      enabled,\n      phase: \"write\",\n      fn: ({ state }) => {\n        const elements = Object.keys(state.elements)\n\n        setStyles(resolve(state.styles, elements))\n        setAttrs(resolve(state.attributes, elements))\n      },\n      requires: [\"computeStyles\"],\n    }),\n    [enabled],\n  )\n\n  const popperOptions = React.useMemo(() => {\n    const newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [\n        ...optionsWithDefaults.modifiers,\n        updateStateModifier,\n        { name: \"applyStyles\", enabled: false },\n      ],\n    }\n\n    if (dequal(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions\n    }\n\n    prevOptions.current = newOptions\n    return newOptions\n  }, [\n    optionsWithDefaults.onFirstUpdate,\n    optionsWithDefaults.placement,\n    optionsWithDefaults.strategy,\n    optionsWithDefaults.modifiers,\n    updateStateModifier,\n  ])\n\n  const popperInstanceRef = React.useRef<Instance | null>()\n\n  useSafeLayoutEffect(() => {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions)\n    }\n  }, [popperOptions])\n\n  useSafeLayoutEffect(() => {\n    if (referenceElement == null || popperElement == null) {\n      return\n    }\n\n    const createPopper = options.createPopper || defaultCreatePopper\n    const popperInstance = createPopper(\n      referenceElement,\n      popperElement,\n      popperOptions,\n    )\n\n    popperInstanceRef.current = popperInstance\n\n    return () => {\n      popperInstance.destroy()\n      popperInstanceRef.current = null\n    }\n  }, [referenceElement, popperElement, options.createPopper])\n\n  React.useEffect(() => {\n    const id = requestAnimationFrame(() => {\n      popperInstanceRef.current?.forceUpdate()\n    })\n    return () => {\n      cancelAnimationFrame(id)\n    }\n  }, [])\n\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles,\n    attributes: attrs,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current\n      ? popperInstanceRef.current.forceUpdate\n      : null,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}