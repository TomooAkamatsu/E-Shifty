{"ast":null,"code":"export function getOwnerWindow(node) {\n  var _getOwnerDocument$def;\n\n  return node instanceof Element ? (_getOwnerDocument$def = getOwnerDocument(node).defaultView) != null ? _getOwnerDocument$def : window : window;\n}\nexport function getOwnerDocument(node) {\n  var _node$ownerDocument;\n\n  return node instanceof Element ? (_node$ownerDocument = node.ownerDocument) != null ? _node$ownerDocument : document : document;\n}\nexport function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nexport var isBrowser = canUseDOM();\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\n\nexport function normalizeEventKey(event) {\n  var {\n    key,\n    keyCode\n  } = event;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nexport var dataAttr = condition => condition ? \"\" : undefined;\nexport var ariaAttr = condition => condition ? true : undefined;\nexport var cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nexport function getActiveElement(node) {\n  var doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nexport function contains(parent, child) {\n  return parent === child || parent.contains(child);\n}","map":{"version":3,"sources":["../../src/dom.ts"],"names":["node","getOwnerDocument","window","isBrowser","canUseDOM","keyCode","isArrowKey","key","eventKey","dataAttr","condition","ariaAttr","cx","classNames","doc","parent"],"mappings":"AAGA,OAAO,SAAA,cAAA,CAAA,IAAA,EAAmD;EAAA,IAAA,qBAAA;;EACxD,OAAOA,IAAI,YAAJA,OAAAA,GAAAA,CAAAA,qBAAAA,GACHC,gBAAgB,CAAhBA,IAAgB,CAAhBA,CADGD,WAAAA,KAAAA,IAAAA,GAAAA,qBAAAA,GAAAA,MAAAA,GAAP,MAAA;AAGD;AAED,OAAO,SAAA,gBAAA,CAAA,IAAA,EAAqD;EAAA,IAAA,mBAAA;;EAC1D,OAAOA,IAAI,YAAJA,OAAAA,GAAAA,CAAAA,mBAAAA,GAA0BA,IAAI,CAA9BA,aAAAA,KAAAA,IAAAA,GAAAA,mBAAAA,GAAAA,QAAAA,GAAP,QAAA;AACD;AAED,OAAO,SAAA,SAAA,GAAqB;EAC1B,OAAO,CAAC,EACN,OAAA,MAAA,KAAA,WAAA,IACAE,MAAM,CADN,QAAA,IAEAA,MAAM,CAANA,QAAAA,CAHF,aAAQ,CAAR;AAKD;AAED,OAAO,IAAMC,SAAS,GAAGC,SAAlB,EAAA;AAEP;AACA;AACA;AACA;;AACA,OAAO,SAAA,iBAAA,CAAA,KAAA,EAAuD;EAC5D,IAAM;IAAA,GAAA;IAAOC;EAAP,IAAN,KAAA;EAEA,IAAMC,UAAU,GACdD,OAAO,IAAPA,EAAAA,IAAiBA,OAAO,IAAxBA,EAAAA,IAAkCE,GAAG,CAAHA,OAAAA,CAAAA,OAAAA,MADpC,CAAA;EAGA,IAAMC,QAAQ,GAAGF,UAAU,GAAA,UAAA,GAAA,GAA3B,GAAA;EAEA,OAAA,QAAA;AACD;AAED,OAAO,IAAMG,QAAQ,GAAIC,SAAD,IACrBA,SAAS,GAAA,EAAA,GADL,SAAA;AAGP,OAAO,IAAMC,QAAQ,GAAID,SAAD,IACtBA,SAAS,GAAA,IAAA,GADJ,SAAA;AAGP,OAAO,IAAME,EAAE,GAAG,SAALA,EAAK,GAAA;EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAIC,UAAJ,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IAAIA,UAAJ,CAAA,IAAA,CAAIA,GAAJ,SAAA,CAAA,IAAA,CAAIA;EAAJ;;EAAA,OAA0BA,UAAU,CAAVA,MAAAA,CAAAA,OAAAA,EAAAA,IAAAA,CAA1B,GAA0BA,CAA1B;AAAX,CAAA;AAEP,OAAO,SAAA,gBAAA,CAAA,IAAA,EAA8C;EACnD,IAAMC,GAAG,GAAGb,gBAAgB,CAA5B,IAA4B,CAA5B;EACA,OAAOa,GAAP,IAAA,IAAOA,GAAP,KAAA,CAAOA,GAAAA,GAAG,CAAV,aAAA;AACD;AAED,OAAO,SAAA,QAAA,CAAA,MAAA,EAAA,KAAA,EAA2D;EAChE,OAAOC,MAAM,KAANA,KAAAA,IAAoBA,MAAM,CAANA,QAAAA,CAA3B,KAA2BA,CAA3B;AACD","sourcesContent":["import * as React from \"react\"\nimport { Booleanish, EventKeys } from \"./types\"\n\nexport function getOwnerWindow(node?: HTMLElement | null) {\n  return node instanceof Element\n    ? getOwnerDocument(node).defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: HTMLElement | null) {\n  return node instanceof Element ? node.ownerDocument ?? document : document\n}\n\nexport function canUseDOM() {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = canUseDOM()\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(event: React.KeyboardEvent) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement, child: HTMLElement) {\n  return parent === child || parent.contains(child)\n}\n"]},"metadata":{},"sourceType":"module"}