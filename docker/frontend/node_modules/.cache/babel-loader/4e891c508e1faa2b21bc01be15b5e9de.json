{"ast":null,"code":"var hasLocalStorage = typeof Storage !== \"undefined\";\nexport var storageKey = \"chakra-ui-color-mode\";\n/**\n * Simple object to handle read-write to localStorage\n */\n\nexport var localStorageManager = {\n  get(init) {\n    if (!hasLocalStorage) {\n      return init;\n    }\n\n    var maybeValue = window.localStorage.getItem(storageKey);\n    return maybeValue != null ? maybeValue : init;\n  },\n\n  set(value) {\n    if (hasLocalStorage) {\n      window.localStorage.setItem(storageKey, value);\n    }\n  },\n\n  type: \"localStorage\"\n};\n/**\n * Simple object to handle read-write to cookies\n */\n\nexport var cookieStorageManager = function cookieStorageManager(cookies) {\n  if (cookies === void 0) {\n    cookies = \"\";\n  }\n\n  return {\n    get(init) {\n      var match = cookies.match(new RegExp(\"(^| )\" + storageKey + \"=([^;]+)\"));\n\n      if (match) {\n        return match[2];\n      }\n\n      return init;\n    },\n\n    set(value) {\n      document.cookie = storageKey + \"=\" + value + \"; max-age=31536000; path=/\";\n    },\n\n    type: \"cookie\"\n  };\n};","map":{"version":3,"sources":["../../src/storage-manager.ts"],"names":["hasLocalStorage","storageKey","localStorageManager","get","maybeValue","window","set","type","cookieStorageManager","cookies","match","document"],"mappings":"AAEA,IAAMA,eAAe,GAAG,OAAA,OAAA,KAAxB,WAAA;AACA,OAAO,IAAMC,UAAU,GAAhB,sBAAA;AAQP;AACA;AACA;;AACA,OAAO,IAAMC,mBAAmC,GAAG;EACjDC,GAAG,CAAA,IAAA,EAAQ;IACT,IAAI,CAAJ,eAAA,EAAsB;MACpB,OAAA,IAAA;IACD;;IAED,IAAMC,UAAU,GAAGC,MAAM,CAANA,YAAAA,CAAAA,OAAAA,CAAnB,UAAmBA,CAAnB;IAEA,OAAOD,UAAP,IAAA,IAAOA,GAAP,UAAOA,GAAP,IAAA;EAR+C,CAAA;;EAUjDE,GAAG,CAAA,KAAA,EAAQ;IACT,IAAA,eAAA,EAAqB;MACnBD,MAAM,CAANA,YAAAA,CAAAA,OAAAA,CAAAA,UAAAA,EAAAA,KAAAA;IACD;EAb8C,CAAA;;EAejDE,IAAI,EAAE;AAf2C,CAA5C;AAkBP;AACA;AACA;;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,OAAA,EAAA;EAAA,IAACC,OAAD,KAAA,KAAA,CAAA,EAAA;IAACA,OAAD,GAAA,EAACA;EAAD;;EAAA,OAAmC;IACrEN,GAAG,CAAA,IAAA,EAAQ;MACT,IAAMO,KAAK,GAAGD,OAAO,CAAPA,KAAAA,CAAc,IAAA,MAAA,CAAA,UAAA,UAAA,GAA5B,UAA4B,CAAdA,CAAd;;MAEA,IAAA,KAAA,EAAW;QACT,OAAOC,KAAK,CAAZ,CAAY,CAAZ;MACD;;MAED,OAAA,IAAA;IARmE,CAAA;;IAUrEJ,GAAG,CAAA,KAAA,EAAQ;MACTK,QAAQ,CAARA,MAAAA,GAAqBV,UAArBU,GAAAA,GAAqBV,GAArBU,KAAqBV,GAArBU,4BAAAA;IAXmE,CAAA;;IAarEJ,IAAI,EAAE;EAb+D,CAAnC;AAA7B,CAAA","sourcesContent":["import { ColorMode } from \"./color-mode.utils\"\n\nconst hasLocalStorage = typeof Storage !== \"undefined\"\nexport const storageKey = \"chakra-ui-color-mode\"\n\nexport interface StorageManager {\n  get(init?: ColorMode): ColorMode | undefined\n  set(value: ColorMode): void\n  type: \"cookie\" | \"localStorage\"\n}\n\n/**\n * Simple object to handle read-write to localStorage\n */\nexport const localStorageManager: StorageManager = {\n  get(init?) {\n    if (!hasLocalStorage) {\n      return init\n    }\n\n    const maybeValue = window.localStorage.getItem(storageKey) as ColorMode\n\n    return maybeValue ?? init\n  },\n  set(value) {\n    if (hasLocalStorage) {\n      window.localStorage.setItem(storageKey, value)\n    }\n  },\n  type: \"localStorage\",\n}\n\n/**\n * Simple object to handle read-write to cookies\n */\nexport const cookieStorageManager = (cookies = \"\"): StorageManager => ({\n  get(init?) {\n    const match = cookies.match(new RegExp(`(^| )${storageKey}=([^;]+)`))\n\n    if (match) {\n      return match[2] as ColorMode\n    }\n\n    return init\n  },\n  set(value) {\n    document.cookie = `${storageKey}=${value}; max-age=31536000; path=/`\n  },\n  type: \"cookie\",\n})\n"]},"metadata":{},"sourceType":"module"}