{"ast":null,"code":"import { getOwnerDocument } from \"@chakra-ui/utils\";\nimport { useEffect, useRef } from \"react\";\nimport { useCallbackRef } from \"./use-callback-ref\";\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\n\nexport function useOutsideClick(props) {\n  var {\n    ref,\n    handler\n  } = props;\n  var savedHandler = useCallbackRef(handler);\n  var stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var state = stateRef.current;\n  useEffect(() => {\n    var onPointerDown = e => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n\n    var onMouseUp = event => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    var onTouchEnd = event => {\n      state.ignoreEmulatedMouseEvents = true;\n\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    var doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state]);\n}\n\nfunction isValidEvent(event, ref) {\n  var _ref$current;\n\n  var target = event.target;\n  if (event.button > 0) return false; // if the event target is no longer in the document\n\n  if (target) {\n    var doc = getOwnerDocument(target);\n    if (!doc.body.contains(target)) return false;\n  }\n\n  return !((_ref$current = ref.current) != null && _ref$current.contains(target));\n}","map":{"version":3,"sources":["../../src/use-outside-click.ts"],"names":["handler","savedHandler","useCallbackRef","stateRef","useRef","isPointerDown","ignoreEmulatedMouseEvents","state","useEffect","onPointerDown","e","isValidEvent","onMouseUp","event","onTouchEnd","doc","getOwnerDocument","ref","target"],"mappings":"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","sourcesContent":["import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { RefObject, useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\ninterface UseOutsideClickOptions {\n  ref: RefObject<HTMLElement>\n  handler: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickOptions) {\n  const { ref, handler } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state])\n}\n\nfunction isValidEvent(event: any, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n  if (event.button > 0) return false\n  // if the event target is no longer in the document\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.body.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n"]},"metadata":{},"sourceType":"module"}