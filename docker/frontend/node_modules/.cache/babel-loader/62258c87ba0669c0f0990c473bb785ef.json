{"ast":null,"code":"import Badge from \"./badge\";\nvar parts = [\"container\", \"label\", \"closeButton\"];\nvar baseStyleContainer = {\n  fontWeight: \"medium\",\n  lineHeight: 1.2,\n  outline: 0,\n  _focus: {\n    boxShadow: \"outline\"\n  }\n};\nvar baseStyleLabel = {\n  lineHeight: 1.2\n};\nvar baseStyleCloseButton = {\n  fontSize: \"18px\",\n  w: \"1.25rem\",\n  h: \"1.25rem\",\n  borderRadius: \"full\",\n  ms: \"0.375rem\",\n  me: \"-1\",\n  opacity: 0.5,\n  _disabled: {\n    opacity: 0.4\n  },\n  _focus: {\n    boxShadow: \"outline\",\n    bg: \"rgba(0, 0, 0, 0.14)\"\n  },\n  _hover: {\n    opacity: 0.8\n  },\n  _active: {\n    opacity: 1\n  }\n};\nvar baseStyle = {\n  container: baseStyleContainer,\n  label: baseStyleLabel,\n  closeButton: baseStyleCloseButton\n};\nvar sizes = {\n  sm: {\n    container: {\n      minH: \"1.25rem\",\n      minW: \"1.25rem\",\n      fontSize: \"xs\",\n      px: 2,\n      borderRadius: \"md\"\n    },\n    closeButton: {\n      me: \"-2px\",\n      ms: \"0.35rem\"\n    }\n  },\n  md: {\n    container: {\n      minH: \"1.5rem\",\n      minW: \"1.5rem\",\n      fontSize: \"sm\",\n      borderRadius: \"md\",\n      px: 2\n    }\n  },\n  lg: {\n    container: {\n      minH: 8,\n      minW: 8,\n      fontSize: \"md\",\n      borderRadius: \"md\",\n      px: 3\n    }\n  }\n};\nvar variants = {\n  subtle: props => ({\n    container: Badge.variants.subtle(props)\n  }),\n  solid: props => ({\n    container: Badge.variants.solid(props)\n  }),\n  outline: props => ({\n    container: Badge.variants.outline(props)\n  })\n};\nvar defaultProps = {\n  size: \"md\",\n  variant: \"subtle\",\n  colorScheme: \"gray\"\n};\nexport default {\n  parts,\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/tag.ts"],"names":["parts","baseStyleContainer","fontWeight","lineHeight","outline","_focus","boxShadow","baseStyleLabel","baseStyleCloseButton","fontSize","w","h","borderRadius","ms","me","opacity","_disabled","bg","_hover","_active","baseStyle","container","label","closeButton","sizes","sm","minH","minW","px","md","lg","variants","subtle","props","Badge","solid","defaultProps","size","variant","colorScheme"],"mappings":"AAAA,OAAA,KAAA,MAAA,SAAA;AAEA,IAAMA,KAAK,GAAG,CAAA,WAAA,EAAA,OAAA,EAAd,aAAc,CAAd;AAIA,IAAMC,kBAAkB,GAAG;EACzBC,UAAU,EADe,QAAA;EAEzBC,UAAU,EAFe,GAAA;EAGzBC,OAAO,EAHkB,CAAA;EAIzBC,MAAM,EAAE;IACNC,SAAS,EAAE;EADL;AAJiB,CAA3B;AASA,IAAMC,cAAc,GAAG;EACrBJ,UAAU,EAAE;AADS,CAAvB;AAIA,IAAMK,oBAAoB,GAAG;EAC3BC,QAAQ,EADmB,MAAA;EAE3BC,CAAC,EAF0B,SAAA;EAG3BC,CAAC,EAH0B,SAAA;EAI3BC,YAAY,EAJe,MAAA;EAK3BC,EAAE,EALyB,UAAA;EAM3BC,EAAE,EANyB,IAAA;EAO3BC,OAAO,EAPoB,GAAA;EAQ3BC,SAAS,EAAE;IACTD,OAAO,EAAE;EADA,CARgB;EAW3BV,MAAM,EAAE;IACNC,SAAS,EADH,SAAA;IAENW,EAAE,EAAE;EAFE,CAXmB;EAe3BC,MAAM,EAAE;IAAEH,OAAO,EAAE;EAAX,CAfmB;EAgB3BI,OAAO,EAAE;IAAEJ,OAAO,EAAE;EAAX;AAhBkB,CAA7B;AAmBA,IAAMK,SAAS,GAAG;EAChBC,SAAS,EADO,kBAAA;EAEhBC,KAAK,EAFW,cAAA;EAGhBC,WAAW,EAAEf;AAHG,CAAlB;AAMA,IAAMgB,KAAK,GAAG;EACZC,EAAE,EAAE;IACFJ,SAAS,EAAE;MACTK,IAAI,EADK,SAAA;MAETC,IAAI,EAFK,SAAA;MAGTlB,QAAQ,EAHC,IAAA;MAITmB,EAAE,EAJO,CAAA;MAKThB,YAAY,EAAE;IALL,CADT;IAQFW,WAAW,EAAE;MACXT,EAAE,EADS,MAAA;MAEXD,EAAE,EAAE;IAFO;EARX,CADQ;EAcZgB,EAAE,EAAE;IACFR,SAAS,EAAE;MACTK,IAAI,EADK,QAAA;MAETC,IAAI,EAFK,QAAA;MAGTlB,QAAQ,EAHC,IAAA;MAITG,YAAY,EAJH,IAAA;MAKTgB,EAAE,EAAE;IALK;EADT,CAdQ;EAuBZE,EAAE,EAAE;IACFT,SAAS,EAAE;MACTK,IAAI,EADK,CAAA;MAETC,IAAI,EAFK,CAAA;MAGTlB,QAAQ,EAHC,IAAA;MAITG,YAAY,EAJH,IAAA;MAKTgB,EAAE,EAAE;IALK;EADT;AAvBQ,CAAd;AAkCA,IAAMG,QAAQ,GAAG;EACfC,MAAM,EAAGC,KAAD,KAAkB;IACxBZ,SAAS,EAAEa,KAAK,CAALA,QAAAA,CAAAA,MAAAA,CAAAA,KAAAA;EADa,CAAlB,CADO;EAIfC,KAAK,EAAGF,KAAD,KAAkB;IACvBZ,SAAS,EAAEa,KAAK,CAALA,QAAAA,CAAAA,KAAAA,CAAAA,KAAAA;EADY,CAAlB,CAJQ;EAOf9B,OAAO,EAAG6B,KAAD,KAAkB;IACzBZ,SAAS,EAAEa,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAAA,KAAAA;EADc,CAAlB;AAPM,CAAjB;AAYA,IAAME,YAAY,GAAG;EACnBC,IAAI,EADe,IAAA;EAEnBC,OAAO,EAFY,QAAA;EAGnBC,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe;EAAA,KAAA;EAAA,QAAA;EAAA,SAAA;EAAA,KAAA;EAKbH;AALa,CAAf","sourcesContent":["import Badge from \"./badge\"\n\nconst parts = [\"container\", \"label\", \"closeButton\"]\n\ntype Dict = Record<string, any>\n\nconst baseStyleContainer = {\n  fontWeight: \"medium\",\n  lineHeight: 1.2,\n  outline: 0,\n  _focus: {\n    boxShadow: \"outline\",\n  },\n}\n\nconst baseStyleLabel = {\n  lineHeight: 1.2,\n}\n\nconst baseStyleCloseButton = {\n  fontSize: \"18px\",\n  w: \"1.25rem\",\n  h: \"1.25rem\",\n  borderRadius: \"full\",\n  ms: \"0.375rem\",\n  me: \"-1\",\n  opacity: 0.5,\n  _disabled: {\n    opacity: 0.4,\n  },\n  _focus: {\n    boxShadow: \"outline\",\n    bg: \"rgba(0, 0, 0, 0.14)\",\n  },\n  _hover: { opacity: 0.8 },\n  _active: { opacity: 1 },\n}\n\nconst baseStyle = {\n  container: baseStyleContainer,\n  label: baseStyleLabel,\n  closeButton: baseStyleCloseButton,\n}\n\nconst sizes = {\n  sm: {\n    container: {\n      minH: \"1.25rem\",\n      minW: \"1.25rem\",\n      fontSize: \"xs\",\n      px: 2,\n      borderRadius: \"md\",\n    },\n    closeButton: {\n      me: \"-2px\",\n      ms: \"0.35rem\",\n    },\n  },\n  md: {\n    container: {\n      minH: \"1.5rem\",\n      minW: \"1.5rem\",\n      fontSize: \"sm\",\n      borderRadius: \"md\",\n      px: 2,\n    },\n  },\n  lg: {\n    container: {\n      minH: 8,\n      minW: 8,\n      fontSize: \"md\",\n      borderRadius: \"md\",\n      px: 3,\n    },\n  },\n}\n\nconst variants = {\n  subtle: (props: Dict) => ({\n    container: Badge.variants.subtle(props),\n  }),\n  solid: (props: Dict) => ({\n    container: Badge.variants.solid(props),\n  }),\n  outline: (props: Dict) => ({\n    container: Badge.variants.outline(props),\n  }),\n}\n\nconst defaultProps = {\n  size: \"md\",\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  parts,\n  variants,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}