{"ast":null,"code":"import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar parts = [\"container\", \"title\", \"description\", \"icon\"];\nvar baseStyle = {\n  container: {\n    px: 4,\n    py: 3\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: 6,\n    mr: 2\n  },\n  description: {\n    lineHeight: 6\n  },\n  icon: {\n    flexShrink: 0,\n    mr: 3,\n    w: 5,\n    h: 6\n  }\n};\n\nfunction getBg(props) {\n  var {\n    theme,\n    colorScheme: c\n  } = props;\n  var lightBg = getColor(theme, c + \".100\", c);\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return mode(lightBg, darkBg)(props);\n}\n\nfunction variantSubtle(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nfunction variantLeftAccent(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      pl: 3,\n      borderLeft: \"4px solid\",\n      borderColor: mode(c + \".500\", c + \".200\")(props),\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nfunction variantTopAccent(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      pt: 2,\n      borderTop: \"4px solid\",\n      borderColor: mode(c + \".500\", c + \".200\")(props),\n      bg: getBg(props)\n    },\n    icon: {\n      color: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nfunction variantSolid(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    container: {\n      bg: mode(c + \".500\", c + \".200\")(props),\n      color: mode(\"white\", \"gray.900\")(props)\n    }\n  };\n}\n\nvar variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid\n};\nvar defaultProps = {\n  variant: \"subtle\"\n};\nexport default {\n  parts,\n  baseStyle,\n  variants,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/alert.ts"],"names":["parts","baseStyle","container","px","py","title","fontWeight","lineHeight","mr","description","icon","flexShrink","w","h","colorScheme","c","lightBg","getColor","darkBg","transparentize","mode","bg","getBg","color","pl","borderLeft","borderColor","pt","borderTop","variants","subtle","solid","variantSolid","defaultProps","variant"],"mappings":"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","sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\n\ntype Dict = Record<string, any>\n\nconst parts = [\"container\", \"title\", \"description\", \"icon\"]\n\nconst baseStyle = {\n  container: {\n    px: 4,\n    py: 3,\n  },\n  title: {\n    fontWeight: \"bold\",\n    lineHeight: 6,\n    mr: 2,\n  },\n  description: {\n    lineHeight: 6,\n  },\n  icon: {\n    flexShrink: 0,\n    mr: 3,\n    w: 5,\n    h: 6,\n  },\n}\n\nfunction getBg(props: Dict) {\n  const { theme, colorScheme: c } = props\n  const lightBg = getColor(theme, `${c}.100`, c)\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return mode(lightBg, darkBg)(props)\n}\n\nfunction variantSubtle(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: { bg: getBg(props) },\n    icon: { color: mode(`${c}.500`, `${c}.200`)(props) },\n  }\n}\n\nfunction variantLeftAccent(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      pl: 3,\n      borderLeft: \"4px solid\",\n      borderColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: getBg(props),\n    },\n    icon: {\n      color: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nfunction variantTopAccent(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      pt: 2,\n      borderTop: \"4px solid\",\n      borderColor: mode(`${c}.500`, `${c}.200`)(props),\n      bg: getBg(props),\n    },\n    icon: {\n      color: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme: c } = props\n  return {\n    container: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n      color: mode(`white`, `gray.900`)(props),\n    },\n  }\n}\n\nconst variants = {\n  subtle: variantSubtle,\n  \"left-accent\": variantLeftAccent,\n  \"top-accent\": variantTopAccent,\n  solid: variantSolid,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}