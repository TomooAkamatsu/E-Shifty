{"ast":null,"code":"import { isFocusable, isTabbable, isHTMLElement } from \"./tabbable\";\nvar focusableElList = [\"input:not([disabled])\", \"select:not([disabled])\", \"textarea:not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nvar focusableElSelector = focusableElList.join();\nexport var isRightClick = event => event.button !== 0;\nexport function getAllFocusable(container) {\n  var focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(isFocusable).filter(el => window.getComputedStyle(el).display !== \"none\");\n}\nexport function getFirstFocusable(container) {\n  var allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nexport function getAllTabbable(container, fallbackToFocusable) {\n  var allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  var allTabbable = allFocusable.filter(isTabbable);\n\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n\n  return allTabbable;\n}\nexport function getFirstTabbableIn(container, fallbackToFocusable) {\n  var [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nexport function getLastTabbableIn(container, fallbackToFocusable) {\n  var allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nexport function getNextTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container);\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport function getPreviousTabbable(container, fallbackToFocusable) {\n  var allFocusable = getAllFocusable(container).reverse();\n  var index = allFocusable.indexOf(document.activeElement);\n  var slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport function focusNextTabbable(container, fallbackToFocusable) {\n  var nextTabbable = getNextTabbable(container, fallbackToFocusable);\n\n  if (nextTabbable && isHTMLElement(nextTabbable)) {\n    nextTabbable.focus();\n  }\n}\nexport function focusPreviousTabbable(container, fallbackToFocusable) {\n  var previousTabbable = getPreviousTabbable(container, fallbackToFocusable);\n\n  if (previousTabbable && isHTMLElement(previousTabbable)) {\n    previousTabbable.focus();\n  }\n}\n\nfunction matches(element, selectors) {\n  if (\"matches\" in element) return element.matches(selectors);\n  if (\"msMatchesSelector\" in element) return element.msMatchesSelector(selectors);\n  return element.webkitMatchesSelector(selectors);\n}\n\nexport function closest(element, selectors) {\n  if (\"closest\" in element) return element.closest(selectors);\n\n  do {\n    if (matches(element, selectors)) return element;\n    element = element.parentElement || element.parentNode;\n  } while (element !== null && element.nodeType === 1);\n\n  return null;\n}","map":{"version":3,"sources":["../../src/dom-query.ts"],"names":["focusableElList","focusableElSelector","isRightClick","event","focusableEls","Array","container","el","window","allFocusable","getAllFocusable","allTabbable","isTabbable","getAllTabbable","first","index","document","slice","fallbackToFocusable","nextTabbable","getNextTabbable","isHTMLElement","previousTabbable","getPreviousTabbable","element","matches"],"mappings":"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","sourcesContent":["import { isFocusable, isTabbable, isHTMLElement } from \"./tabbable\"\n\nconst focusableElList = [\n  \"input:not([disabled])\",\n  \"select:not([disabled])\",\n  \"textarea:not([disabled])\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"a[href]\",\n  \"area[href]\",\n  \"button:not([disabled])\",\n  \"[tabindex]\",\n  \"audio[controls]\",\n  \"video[controls]\",\n  \"*[tabindex]:not([aria-disabled])\",\n  \"*[contenteditable]\",\n]\n\nconst focusableElSelector = focusableElList.join()\n\nexport const isRightClick = <E extends MouseEvent | React.MouseEvent>(\n  event: E,\n) => event.button !== 0\n\nexport function getAllFocusable<T extends HTMLElement>(container: T) {\n  const focusableEls = Array.from(\n    container.querySelectorAll<T>(focusableElSelector),\n  )\n  focusableEls.unshift(container)\n  return focusableEls\n    .filter(isFocusable)\n    .filter((el) => window.getComputedStyle(el).display !== \"none\")\n}\n\nexport function getFirstFocusable<T extends HTMLElement>(container: T) {\n  const allFocusable = getAllFocusable(container)\n  return allFocusable.length ? allFocusable[0] : null\n}\n\nexport function getAllTabbable<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n) {\n  const allFocusable = Array.from(\n    container.querySelectorAll<T>(focusableElSelector),\n  )\n  const allTabbable = allFocusable.filter(isTabbable)\n\n  if (isTabbable(container)) {\n    allTabbable.unshift(container)\n  }\n\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable\n  }\n  return allTabbable\n}\n\nexport function getFirstTabbableIn<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n): T | null {\n  const [first] = getAllTabbable(container, fallbackToFocusable)\n  return first || null\n}\n\nexport function getLastTabbableIn<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n): T | null {\n  const allTabbable = getAllTabbable(container, fallbackToFocusable)\n  return allTabbable[allTabbable.length - 1] || null\n}\n\nexport function getNextTabbable<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n): T | null {\n  const allFocusable = getAllFocusable(container)\n  const index = allFocusable.indexOf(document.activeElement as T)\n  const slice = allFocusable.slice(index + 1)\n  return (\n    slice.find(isTabbable) ||\n    allFocusable.find(isTabbable) ||\n    (fallbackToFocusable ? slice[0] : null)\n  )\n}\n\nexport function getPreviousTabbable<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n): T | null {\n  const allFocusable = getAllFocusable(container).reverse()\n  const index = allFocusable.indexOf(document.activeElement as T)\n  const slice = allFocusable.slice(index + 1)\n  return (\n    slice.find(isTabbable) ||\n    allFocusable.find(isTabbable) ||\n    (fallbackToFocusable ? slice[0] : null)\n  )\n}\n\nexport function focusNextTabbable<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n) {\n  const nextTabbable = getNextTabbable(container, fallbackToFocusable)\n  if (nextTabbable && isHTMLElement(nextTabbable)) {\n    nextTabbable.focus()\n  }\n}\n\nexport function focusPreviousTabbable<T extends HTMLElement>(\n  container: T,\n  fallbackToFocusable?: boolean,\n) {\n  const previousTabbable = getPreviousTabbable(container, fallbackToFocusable)\n  if (previousTabbable && isHTMLElement(previousTabbable)) {\n    previousTabbable.focus()\n  }\n}\n\nfunction matches(element: Element, selectors: string): boolean {\n  if (\"matches\" in element) return element.matches(selectors)\n  if (\"msMatchesSelector\" in element)\n    return (element as any).msMatchesSelector(selectors)\n  return (element as any).webkitMatchesSelector(selectors)\n}\n\nexport function closest<T extends HTMLElement>(element: T, selectors: string) {\n  if (\"closest\" in element) return element.closest(selectors)\n  do {\n    if (matches(element, selectors)) return element\n    element = (element.parentElement || element.parentNode) as any\n  } while (element !== null && element.nodeType === 1)\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}