{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\nvar variants = {\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut\n    }\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      ease: EASINGS.easeIn\n    }\n  }\n};\nexport var fadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants\n};\nexport var Fade = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    unmountOnExit,\n    in: isOpen,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"className\"]);\n\n  var shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true;\n  return /*#__PURE__*/React.createElement(AnimatePresence, null, shouldExpand && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-fade\", className)\n  }, fadeConfig, {\n    animate: isOpen || unmountOnExit ? \"enter\" : \"exit\"\n  }, rest)));\n});\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\";\n}","map":{"version":3,"sources":["../../src/fade.tsx"],"names":["variants","exit","opacity","transition","duration","ease","EASINGS","easeOut","enter","easeIn","fadeConfig","initial","animate","Fade","in","className","rest","shouldExpand","unmountOnExit","isOpen","cx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,EAAA,EAAA,OAAA,QAAA,kBAAA;AACA,SAAA,eAAA,EAAA,MAAA,QAAA,eAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,OAAA,QAAA,WAAA;AAIA,IAAMA,QAA2B,GAAG;EAClCC,IAAI,EAAE;IACJC,OAAO,EADH,CAAA;IAEJC,UAAU,EAAE;MACVC,QAAQ,EADE,GAAA;MAEVC,IAAI,EAAEC,OAAO,CAACC;IAFJ;EAFR,CAD4B;EAQlCC,KAAK,EAAE;IACLN,OAAO,EADF,CAAA;IAELC,UAAU,EAAE;MACVC,QAAQ,EADE,GAAA;MAEVC,IAAI,EAAEC,OAAO,CAACG;IAFJ;EAFP;AAR2B,CAApC;AAiBA,OAAO,IAAMC,UAAoD,GAAG;EAClEC,OAAO,EAD2D,MAAA;EAElEC,OAAO,EAF2D,OAAA;EAGlEX,IAAI,EAH8D,MAAA;EAIlED;AAJkE,CAA7D;AAkBP,OAAO,IAAMa,IAAI,GAAA,aAAG,KAAK,CAAL,UAAA,CAClB,CAAA,KAAA,EAAA,GAAA,KAAgB;EACd,IAAM;IAAA,aAAA;IAAiBC,EAAE,EAAnB,MAAA;IAA6BC;EAA7B,IAAN,KAAA;EAAA,IAAiDC,IAAjD,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,eAAA,EAAA,IAAA,EAAA,WAAA,CAAA,CAAA;;EACA,IAAMC,YAAY,GAAGC,aAAa,GAAGC,MAAM,IAAT,aAAA,GAAlC,IAAA;EAEA,OAAA,aACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,IAAA,EACGF,YAAY,IAAA,aACX,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,GAAA,EAAA,QAAA,CAAA;IACE,GAAG,EADL,GAAA;IAEE,SAAS,EAAEG,EAAE,CAAA,aAAA,EAAA,SAAA;EAFf,CAAA,EAAA,UAAA,EAAA;IAIE,OAAO,EAAED,MAAM,IAANA,aAAAA,GAAAA,OAAAA,GAAoC;EAJ/C,CAAA,EAHN,IAGM,CAAA,CAFJ,CADF;AALG,CAAa,CAAb;;AAqBP,IAAA,OAAA,EAAa;EACXN,IAAI,CAAJA,WAAAA,GAAAA,MAAAA;AACD","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\ntype FadeMotionVariant = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: FadeMotionVariant = {\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.1,\n      ease: EASINGS.easeOut,\n    },\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n      ease: EASINGS.easeIn,\n    },\n  },\n}\n\nexport const fadeConfig: Omit<HTMLMotionProps<any>, \"transition\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants,\n}\n\nexport interface FadeProps extends HTMLMotionProps<\"div\"> {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport const Fade = React.forwardRef<HTMLDivElement, FadeProps>(\n  (props, ref) => {\n    const { unmountOnExit, in: isOpen, className, ...rest } = props\n    const shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true\n\n    return (\n      <AnimatePresence>\n        {shouldExpand && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-fade\", className)}\n            {...fadeConfig}\n            animate={isOpen || unmountOnExit ? \"enter\" : \"exit\"}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Fade.displayName = \"Fade\"\n}\n"]},"metadata":{},"sourceType":"module"}