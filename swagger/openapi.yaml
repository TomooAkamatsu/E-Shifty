openapi: "3.0.3"

info:
  title: "Shiftwork Management API"
  description: |
    - シフト一覧のGET/POST
    - 休み希望のGET/POST
    - 休み希望一覧のGET
    - シフトパターンのGET
    - 仮シフトのGET/PUT
    - 従業員一覧のGET
    - 従業員詳細情報のPOST/PUT/DELETE
  version: "1.0.2"

servers:
  - url: "http://localhost:8080"
    description: "Local development"

tags:
  - name: shift
    description: シフトに関する操作
  - name: employees
    description: 従業員の情報に関する操作

paths:
  "/api/shift/{year}/{month}":
    get:
      summary: "月毎のシフト一覧取得"
      description: "月毎の全従業員のシフト一覧を取得する"
      tags: ["shift"]
      deprecated: false
      parameters:
        - name: "year"
          in: "path"
          description: "取得したいシフトの年"
          required: true
          schema: { type:number }
          example: "2022"
        - name: "month"
          in: "path"
          description: "取得したいシフトの月"
          required: true
          schema: { type:number }
          example: "5"
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  shift:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeName: { type: string }
                        patternArr:
                          type: array
                          items: { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  "/api/shift/requests/{id}":
    get:
      summary: "休み希望の取得"
      description: "従業員個人が登録済みの(未登録であれば空)の来月の休み希望を取得する"
      tags: ["shift"]
      deprecated: false
      parameters:
        - name: "id"
          in: "path"
          description: "休み希望を取得する対象ID"
          required: true
          schema: { type:number }
          example: "1"
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  employeeId: { type: number }
                  employeeName: { type: string }
                  requestDate:
                    type: array
                    items: { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
    post:
      summary: "休み希望の登録&更新"
      description: "従業員個人が来月の休み希望を登録または更新する"
      tags: ["shift"]
      deprecated: false
      parameters:
        - name: "id"
          in: "path"
          description: "休み希望を登録する対象ID"
          required: true
          schema: { type:number }
          example: "1"
      requestBody:
        description: "休み希望の送信"
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeId: { type: number }
                requestDate:
                  type: array
                  items: { type: string }
      responses:
        "201":
          description: "登録の成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationSuccess"
        "400":
          description: "登録の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exceptionHandlerRespose"
  "/api/shift/requests":
    get:
      summary: "休み希望一覧取得(管理者用)"
      description: "管理者用に全従業員が提出した来月の休み希望一覧を取得する"
      tags: ["shift"]
      deprecated: false
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    employeeId: { type: number }
                    employeeName: { type: string }
                    requestDate:
                      type: array
                      items: { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  "/api/shift/draft":
    get:
      summary: "シフト作成用の仮シフトの取得(管理者用)"
      description: "休み希望を反映した全従業員の来月の仮シフトを取得する"
      tags: ["shift"]
      deprecated: false
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstHalf:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeName: { type: string }
                        shift:
                          type: object
                          properties:
                            "対象月の日付": { type: string }
                  latterHalf:
                    type: array
                    items:
                      type: object
                      properties:
                        employeeName: { type: string }
                        shift:
                          type: object
                          properties:
                            "対象月の日付": { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
    patch:
      summary: "シフト作成画面で仮シフト更新(管理者用)"
      description: "シフト作成画面にて仮シフトの修正情報を送信"
      tags: ["shift"]
      deprecated: false
      requestBody:
        description: "仮シフトの修正情報を送信"
        content:
          application/json:
            schema:
              type: object
              properties:
                targetEmployeeName: { type: string }
                targetDate: { type: string }
                changedPattern: { type: string }
      responses:
        "200":
          description: "更新の成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationSuccess"
        "400":
          description: "更新の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exceptionHandlerRespose"
  "/api/shift/draft/confirm":
    post:
      summary: "仮シフトの確定(管理者用) ※未実装"
      description: "仮シフトを確定させる"
      tags: ["shift"]
      deprecated: false
      requestBody:
        description: "仮シフトの修正情報を送信"
        content:
          application/json:
            schema:
              type: string
              example: "confirm"
              # こういう場合はオブジェクトではなくても良いのか...?
      responses:
        "201":
          description: "登録の成功"
  "/api/shift/draft/recreation":
    get:
      summary: "シフトの再作成(管理者用)"
      description: "シフトを再作成する"
      tags: ["shift"]
      deprecated: false
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationSuccess"
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  "/api/shift/pattern":
    get:
      summary: "シフトパターンの取得(管理者用)"
      description: "シフト作成画面でのプルダウン用にシフトパターンを情報を取得"
      tags: ["shift"]
      deprecated: false
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  shiftPattern:
                    type: array
                    items: { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  "/api/employees":
    get:
      summary: "従業員一覧の取得"
      description: "従業員一覧と詳細情報の取得"
      tags: ["employees"]
      deprecated: false
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    employeeId: { type: number }
                    lastName: { type: string }
                    firstName: { type: string }
                    romanLastName: { type: string }
                    romanFirstName: { type: string }
                    birthday: { type: string }
                    age: { type: number }
                    gender: { type: string }
                    phoneNumber: { type: string }
                    email: { type: string }
                    employmentDate: { type: string }
                    workingFormName: { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
    post:
      summary: "従業員の新規登録(管理者用)"
      description: "従業員の新規登録情報の送信"
      tags: ["employees"]
      deprecated: false
      requestBody:
        description: "登録情報を送信"
        content:
          application/json:
            schema:
              type: object
              properties:
                lastName: { type: string }
                firstName: { type: string }
                romanLastName: { type: string }
                romanFirstName: { type: string }
                birthday: { type: string }
                age: { type: number }
                gender: { type: string }
                phoneNumber: { type: string }
                email: { type: string }
                employmentDate: { type: string }
                workingFormName: { type: string }
      responses:
        "201":
          description: "登録の成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employeeOperationSuccess"
        "400":
          description: "登録の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exceptionHandlerRespose"
  "/api/employees/{id}":
    patch:
      summary: "従業員詳細情報の更新(管理者用)"
      description: "従業員詳細情報画面にて情報を更新"
      tags: ["employees"]
      deprecated: false
      parameters:
        - name: "id"
          in: "path"
          description: "更新対象の従業員ID"
          required: true
          schema: { type:number }
          example: "1"
      requestBody:
        description: "更新対象の項目と内容を送信"
        content:
          application/json:
            schema:
              type: object
              properties:
                "対象項目": { type: string }
      responses:
        "200":
          description: "更新の成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employeeOperationSuccess"
        "400":
          description: "更新の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exceptionHandlerRespose"
    delete:
      summary: "従業員詳細情報の削除(管理者用)"
      description: |
        - 従業員詳細情報画面にて情報を削除
        - requestBodyをobjectではなくstringにして良いのか...
      tags: ["employees"]
      deprecated: false
      parameters:
        - name: "id"
          in: "path"
          description: "削除対象の対象ID"
          required: true
          schema: { type:number }
          example: "1"
      responses:
        "200":
          description: "削除の成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/employeeOperationSuccess"
        "400":
          description: "削除の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exceptionHandlerRespose"
  "/api/employees/working-form":
    get:
      summary: "勤務形態リストの取得"
      description: "従業員情報更新ページのプルダウンのための勤務形態リストの取得"
      tags: ["employees"]
      deprecated: false
      responses:
        "200":
          description: "取得の成功"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    workingFormId: { type: number }
                    workingFormName: { type: string }
        "500":
          description: "取得の失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"
  "/api/employees/reset":
    get:
      summary: "従業員情報のリセット"
      description: "デプロイ中、従業員情報を変更後の再起動を避けるためのリセット機能"
      tags: ["employees"]
      deprecated: false
      responses:
        "200":
          description: "リセットの成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/operationSuccess"
        "500":
          description: "リセットの失敗"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500"

components:
  schemas:
    500:
      type: object
      properties:
        exception: { type: string }
        message: { type: string }
        status: { type: string }
    exceptionHandlerRespose:
      type: object
      properties:
        exception: { type: string }
        message: { type: string }
        status: { type: string }
    employeeOperationSuccess:
      type: object
      properties:
        completed: { type: boolean }
        targetEmployeeId: { type: number }
    operationSuccess:
      type: object
      properties:
        completed: { type: boolean }
